---
title: "Feeding behavior comparison"
author: "Helene Cecilia"
format: html
---
```{r}
#| include: false

rm(list=ls())

library(ggdist)
library(tidyverse)
library(patchwork)
library(Matching) # for ks.boot
library(scales)
library(DHARMa)
library(glmmTMB)
library(effects)
library(MASS)
library(mgcv)
library(readxl)
library(lubridate)
library(hms)
library(chron)
library(MuMIn) # for r.squaredGLMM
# library(gammit) # for predict_gamm
library(janitor) # for clean_names
library(multcomp) # for glht
library(gghalves) # for half_boxplot
library(ggtext) # for element_markdown
library(Hmisc) # for Cs
library(ggpubr) # for stat_compare_means
library(cowplot) # for draw_image
library(magick) # for draw_image / note : installed through command line, error in Rstudio
library(here)
library(broom) # for tidy
library(lsr) # for etaSquared
library(marginaleffects) # for datagrid, predictions
```



```{r}
#| label: heterogeneity-among-NHP
#| echo: false

df1 <- read.csv("../output/mosq_feeding_behaviour/DENV_Cyno_data_feeding_behaviour_with_total_correct.csv")
df1$NHP <- "Cyno"
df1$virus <- "Dengue virus"

df2 <- read.csv("../output/mosq_feeding_behaviour/DENV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
df2$NHP <- "Squirrel"
df2$virus <- "Dengue virus"
df2$mosq_type <- NULL

df3 <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
df3$NHP <- "Squirrel"
df3$virus <- "Zika virus"
df3$mosq_type <- NULL
# removing controls as they're already in df2
df3 <- df3[df3$group != "control",]

df4 <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Cyno_data_feeding_behaviour.csv")
df4$NHP <- "Cyno"
df4$virus <- "Zika virus"
df4$raw_file_inspected <- TRUE

df <- rbind(df1,df2,df3,df4)
df <- df[df$day != 28,] # REMOVING DAY 28
df$total <- df$total_correct
q25 <- quantile(df$nb_fed/df$total, probs = 0.25)
q75 <- quantile(df$nb_fed/df$total, probs = 0.75)

df$monkey_status <- df$virus
df$monkey_status[which(df$group == "control")] <- "Control"

df$monkey_status <- as.factor(df$monkey_status)
df <- within(df, monkey_status <- relevel(monkey_status, ref = "Dengue virus"))

df$NHP <- as.factor(df$NHP)
df <- within(df, NHP <- relevel(NHP, ref = "Squirrel"))

df$group_agg <- interaction(df$NHP,df$monkey_status)
df$group_agg <- gsub(" ","_",df$group_agg) 
df$group_agg <- as.factor(df$group_agg)
# df <- within(df, group_agg <- relevel(group_agg, ref = "Squirrel.Dengue_virus"))
# df$group_agg <- factor(df$group_agg, levels = c("Cyno.Dengue_virus",
#                                                   "Cyno.",
#                                                   "Squirrel.Dengue_virus",
#                                                   "Squirrel.",
#                                                   "Squirrel.Zika_virus"))

feed_duration <- str_split(df$feed_duration,":")
vec_duration <- sapply(feed_duration,"[[",2)
df$int_duration <- as.integer(vec_duration)

df$ID <- as.factor(df$ID)
df$ID <- factor(df$ID, levels = Cs(NV259,
                                   NV289,
                                   UG171,
                                   UG253A,
                                          BC116A,
                                          BC167,
                                          BC407,
                                          CP60,
                                          FR423A,
                                          FR469A,
                                          FR840,
                                          SB393,
                                          SB395,
                                                UGZ626,
                                                EC944,
                                                FR1221,
                                                      5080,
                                                      5929,
                                                      6321,
                                                      6541,4516,
                                                          4872,
                                                          5045,
                                                          5910,
                                                          6242,
                                                          6314,
                                                          6363,
                                                          6401,
                                                          6519,
                                                          6552,4683,
                                                            4728,
                                                            4806,
                                                            5013,
                                                            5730,
                                                            6311,
                                                            6347,
                                                            6359,
                                                            6518,
                                                            6550))

df$monkey_status <- factor(df$monkey_status, levels = c("Control",
                                                        "Dengue virus",
                                                        "Zika virus"))

# group_names <- list("Squirrel - DENV",
#                              "Cyno - Control",
#                              "Cyno - DENV",
#                              "Squirrel - Control",
#                              "Squirrel - ZIKV")
# group_labeller <- function(variable,value){
#   return(group_names[value])
# }

df$vir_TTM <- df$viremia > 0
df$prop <- df$nb_fed/df$total
df$prop_time <- df$nb_fed/(df$total * df$int_duration)

# Statistics ----
## Without duration ----
stat1 <- df %>% group_by(ID) %>% summarise(cv = sd(prop)/mean(prop)) %>% ungroup()
 # ID        cv
 # <fct>  <dbl>
 # NV259  0.395
 # NV289  0.284
 # UG171  0.303
 # UG253A 0.190
 # BC116A 0.196
 # BC167  0.170
 # BC407  0.277
 # CP60   0.211
 # FR423A 0.133
 # FR469A 0.239
 # FR840  0.244
 # SB393  0.118
 # SB395  0.216
 # UGZ626 0.320
 # EC944  0.225
 # FR1221 0.141
 # 5080   0.520
 # 5929   0.390
 # 6321   0.306
 # 6541   0.371
 # 4516   0.631
 # 4872   0.341
 # 5045   0.463
 # 5910   0.460
 # 6242   0.286
 # 6314   0.237
 # 6363   0.620
 # 6401   0.384
 # 6519   0.253
 # 6552   0.317
 # 4683   0.701
 # 4728   0.675
 # 4806   0.220
 # 5013   0.249
 # 5730   0.522
 # 6311   0.327
 # 6347   0.270
 # 6359   0.220
 # 6518   0.181
 # 6550   0.494
summary(stat1$cv)

stat2 <- df %>% group_by(NHP,monkey_status) %>% summarise(cv = sd(prop)/mean(prop)) %>% ungroup()
 # NHP      monkey_status    cv
 # <fct>    <fct>         <dbl>
 # Squirrel Control       0.395
 # Squirrel Dengue virus  0.398
 # Squirrel Zika virus    0.377
 # Cyno     Control       0.295
 # Cyno     Dengue virus  0.200
 # Cyno     Zika virus    0.231

# see if prop and total give the same cv (for a given total, don't compare cyno and squirrels) : YES
# stat3 <- df %>% group_by(NHP,monkey_status) %>% summarise(cv = sd(nb_fed)/mean(nb_fed)) %>% ungroup()

## With duration ----
stat1 <- df %>% group_by(ID) %>% summarise(cv = sd(prop_time)/mean(prop_time)) %>% ungroup()
 # ID        cv
 # <fct>  <dbl>
 # NV259  0.451
 # NV289  0.218
 # UG171  0.305
 # UG253A 0.358
 # BC116A 0.426
 # BC167  0.452
 # BC407  0.440
 # CP60   0.387
 # FR423A 0.300
 # FR469A 0.339
 # FR840  0.637
 # SB393  0.225
 # SB395  0.246
 # UGZ626 0.421
 # EC944  0.274
 # FR1221 0.312
 # 5080   0.568
 # 5929   0.489
 # 6321   0.324
 # 6541   0.482
 # 4516   0.654
 # 4872   0.389
 # 5045   0.596
 # 5910   0.574
 # 6242   0.392
 # 6314   0.370
 # 6363   0.645
 # 6401   0.513
 # 6519   0.341
 # 6552   0.402
 # 4683   0.881
 # 4728   0.789
 # 4806   0.413
 # 5013   0.626
 # 5730   0.591
 # 6311   0.464
 # 6347   0.452
 # 6359   0.407
 # 6518   0.336
 # 6550   0.551
summary(stat1$cv)
 #   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 # 0.2182  0.3401  0.4235  0.4510  0.5554  0.8813
 
# Figures ----
## Without duration ----
p <- ggplot(df, aes(x = ID, y = prop)) +
  geom_boxplot(aes(fill = monkey_status),
               varwidth = F,
               alpha = 0.5,
               outlier.shape = NA) +
  geom_jitter(aes(color = vir_TTM,
                  shape = monkey_status),
              width = 0.1,
              size = 2.75, alpha = 0.7) +
  geom_vline(xintercept = 13.5, linewidth = 1.25, alpha = 0.6) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("TRUE" = "red",
                               "FALSE" = "black"),
                     labels = c("TRUE" = "Yes",
                                "FALSE" = "No")) +
  scale_shape_manual(values = c("Dengue virus" = 16,
                                "Zika virus" = 15,
                                "Control" = 17)) +
  labs(y = "Proportion of fed mosquitoes", x = "",
                         fill = "Monkey status",
                         color = "Viremic",
                         shape = "Monkey status") +
  guides(fill = guide_legend(override.aes = list(alpha = 0.7))) +
  ggtitle("A") +
  annotate(geom = "text", label = "Cynomolgus\nmacaques",
           x = 7.75, y = 1.17, size = 8) +
  annotate(geom = "text", label = "Squirrel\nmonkeys",
           x = 27, y = 1.17, size = 8) +
  # annotate(geom = "text", label = "Proportion of fed mosquitoes",
  #          x = -4, y = 0.5, size = 8, angle = 90) +
  scale_y_continuous(limits = c(0,1.25),
                     breaks = c(0,0.25,0.5,0.75,1),
                     expand = expansion(add = 0.03)) + 
  theme_cowplot() +
  # theme_classic() +
  theme(axis.text.x = element_text(size = 17,
                                   vjust = 1 ,
                                   hjust = 1,
                                   angle = 45),
        axis.text.y = element_text(size = 22),
        axis.title.y = element_markdown(size = 22,
                                    margin = margin(r = 15, t = 150),
                                    vjust = 0),
        legend.position = c(1.05,0.27),
        plot.margin = unit(c(0,9.2,0,1), "cm"),
        legend.text = element_text(size = 24),
        legend.title = element_text(size = 24),
        legend.key.height = unit(1.5,"cm"),
        legend.key.width = unit(1.5,"cm"))

p_draw <- ggdraw() + 
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/macaque_outline.png",
             x = -0.35, y = 0.45, scale = 0.1) +
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png",
             x = 0.04, y = 0.45, scale = 0.1) +
  draw_plot(p)
# if warning Removes x rows containing missing values -> execute again (because of jitter)

png(filename = here("output","mosq_feeding_behaviour","figures","heterogeneity_among_hosts_with_vir_TTM_no_day28.png"), width = 1600, height = 750)
print(p_draw)
dev.off()

## With duration ----
p <- ggplot(df, aes(x = ID, y = prop_time)) +
  geom_boxplot(aes(fill = monkey_status),
               varwidth = F,
               alpha = 0.5,
               outlier.shape = NA) +
  geom_jitter(aes(color = vir_TTM,
                  shape = monkey_status),
              width = 0.1,
              size = 2.75, alpha = 0.7) +
  geom_vline(xintercept = 16.5, linewidth = 1.25, alpha = 0.6) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("TRUE" = "red",
                               "FALSE" = "black"),
                     labels = c("TRUE" = "Yes",
                                "FALSE" = "No")) +
  scale_shape_manual(values = c("Dengue virus" = 16,
                                "Zika virus" = 15,
                                "Control" = 17)) +
  labs(y = "Proportion of fed mosquitoes<br>normalized by duration<br>of exposure (min<sup>-1</sup>)",
       x = "",
       fill = bquote(bold("Monkey status")),
       shape = bquote(bold("Monkey status")),
       color = bquote(bold("Viremic"))) +
  guides(fill = guide_legend(override.aes = list(alpha = 0.7), order = 1,
                             title.position = "left", nrow = 1),
         colour = guide_legend(order = 2,
                               title.position = "left", nrow = 1),
         shape = guide_legend(order = 1,
                              title.position = "left", nrow = 1)) +
  annotate(geom = "text", label = "Cynomolgus\nmacaques",
           x = 9, y = 0.35, size = 8) +
  annotate(geom = "text", label = "Squirrel\nmonkeys",
           x = 29.7, y = 0.35, size = 8) +
  # annotate(geom = "text", label = "A",
  #          x = 1, y = 0.37, size = 10) + # instead of title or tag because of font
  scale_y_continuous(limits = c(0,0.37),
                     breaks = c(0,0.05,0.1,0.15,0.2,0.25,0.3),
                     expand = expansion(add = 0.01)) + 
  theme_cowplot() +
  # theme_classic() +
  theme(axis.text.x = element_text(size = 18,
                                   vjust = 1 ,
                                   hjust = 1,
                                   angle = 45),
        axis.text.y = element_text(size = 22),
        axis.title.y = element_markdown(size = 22,
                                    margin = margin(r = 18, t = 140),
                                    vjust = 0),
        legend.position = "bottom", #c(0.5,-0.27),
        legend.justification = "center",
        legend.box = "vertical",
        plot.margin = unit(c(0.2,0.5,0.2,0.5), "cm"),
        legend.text = element_text(size = 24),
        legend.title = element_text(size = 24),
        legend.key.height = unit(1.5,"cm"),
        legend.key.width = unit(1.5,"cm"))

p_draw <- ggdraw() + 
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/macaque_outline.png",
             x = -0.29, y = 0.43, scale = 0.1) +
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png",
             x = 0.18, y = 0.43, scale = 0.1) +
  draw_plot(p)
# if warning Removes x rows containing missing values -> execute again (because of jitter)

png(filename = here("output","mosq_feeding_behaviour","figures","heterogeneity_among_hosts.png"), width = 1600, height = 750)
print(p_draw)
dev.off()

# Without duration (suppl) ----

p <- ggplot(df, aes(x = ID, y = prop)) +
  geom_boxplot(aes(fill = monkey_status),
               varwidth = F,
               alpha = 0.5,
               outlier.shape = NA) +
  geom_jitter(aes(color = vir_TTM,
                  shape = monkey_status),
              width = 0.14,
              size = 2.75, alpha = 0.7) +
  geom_vline(xintercept = 16.5, linewidth = 1.25, alpha = 0.6) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("TRUE" = "red",
                               "FALSE" = "black"),
                     labels = c("TRUE" = "Yes",
                                "FALSE" = "No")) +
  scale_shape_manual(values = c("Dengue virus" = 16,
                                "Zika virus" = 15,
                                "Control" = 17)) +
  labs(y = "Proportion of fed mosquitoes",
       x = "",
       fill = "Monkey status",
       shape = "Monkey status",
       color = "Viremic") +
  guides(fill = guide_legend(override.aes = list(alpha = 0.7), order = 1,
                             title.position = "left", nrow = 1),
         colour = guide_legend(order = 2,
                               title.position = "left", nrow = 1),
         shape = guide_legend(order = 1,
                              title.position = "left", nrow = 1)) +
  annotate(geom = "text", label = "Cynomolgus\nmacaques",
           x = 10, y = 1.18, size = 8) +
  annotate(geom = "text", label = "Squirrel\nmonkeys",
           x = 30, y = 1.18, size = 8) +
  annotate(geom = "text", label = "A",
           x = 1, y = 1.23, size = 10) + # instead of title or tag because of font
  scale_y_continuous(limits = c(0,1.25),
                     breaks = c(0,0.25,0.5,0.75,1),
                     expand = expansion(add = 0.03)) +
  theme_cowplot() +
  # theme_classic() +
  theme(axis.text.x = element_text(size = 18,
                                   vjust = 1 ,
                                   hjust = 1,
                                   angle = 45),
        axis.text.y = element_text(size = 22),
        axis.title.y = element_markdown(size = 22,
                                    margin = margin(r = 18, t = 150),
                                    vjust = 0),
        legend.position = "bottom", #c(0.5,-0.27),
        legend.justification = "center",
        legend.box = "vertical",
        plot.margin = unit(c(0.2,0.5,0.2,0.5), "cm"),
        legend.text = element_text(size = 24),
        legend.title = element_text(size = 24),
        legend.key.height = unit(1.5,"cm"),
        legend.key.width = unit(1.5,"cm"))

p_draw <- ggdraw() + 
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/macaque_outline.png",
             x = -0.29, y = 0.43, scale = 0.1) +
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png",
             x = 0.18, y = 0.43, scale = 0.1) +
  draw_plot(p)
# if warning Removes x rows containing missing values -> execute again (because of jitter)

png(filename = here("output","mosq_feeding_behaviour","figures","heterogeneity_among_hosts_ZIKV_Cyno_no_duration.png"), width = 1600, height = 750)
print(p_draw)
dev.off()

```

```{r}
#| label: simple-model-duration-as-OFFSET
#| echo: false

df1 <- read.csv("../output/mosq_feeding_behaviour/DENV_Cyno_data_feeding_behaviour_with_total_correct.csv")
df1$NHP <- "Cyno"
df1$virus <- "Dengue virus"

df2 <- read.csv("../output/mosq_feeding_behaviour/DENV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
df2$NHP <- "Squirrel"
df2$virus <- "Dengue virus"
df2$mosq_type <- NULL

df3 <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
df3$NHP <- "Squirrel"
df3$virus <- "Zika virus"
df3$mosq_type <- NULL
# removing controls as they're already in df2
df3 <- df3[df3$group != "control",]

df4 <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Cyno_data_feeding_behaviour.csv")
df4$NHP <- "Cyno"
df4$virus <- "Zika virus"
df4$raw_file_inspected <- TRUE

# # subsetting : days with possible viremia / 2nd AICc values
# control1 <- df1[df1$group == "control",] # no subsetting for controls
# control2 <- df2[df2$group == "control",] # no subsetting for controls
# df1_ <- df1[df1$group != "control",]
# df2_ <- df2[df2$group != "control",]
# denv_cy <- df1_[df1_$day %in% seq(1,14),]
# denv_sq <- df2_[df2_$day %in% seq(1,14),]
# zikv_sq <- df3[df3$day %in% seq(1,8),]
# zikv_cy <- df4[df4$day %in% seq(1,8),]
# control <- rbind(control1, control2)
# df <- rbind(denv_cy, denv_sq, zikv_sq, zikv_cy, control)

# no subsetting
df <- rbind(df1,df2,df3,df4)

# Exclude day 28
df <- df[df$day != 28,]

df$total <- df$total_correct

feed_duration <- str_split(df$feed_duration,":")
vec_duration <- sapply(feed_duration,"[[",2)
df$int_duration <- as.integer(vec_duration)

summary(df$int_duration)

df$monkey_status <- df$virus
df$monkey_status[which(df$group == "control")] <- "Control"

df$monkey_status <- as.factor(df$monkey_status)
df <- within(df, monkey_status <- relevel(monkey_status, ref = "Dengue virus"))

df$NHP <- as.factor(df$NHP)
df <- within(df, NHP <- relevel(NHP, ref = "Squirrel"))

df$group_agg <- interaction(df$NHP,df$monkey_status)
df$group_agg <- gsub(" ","_",df$group_agg) # no space for posthoc test to work
df$group_agg <- as.factor(df$group_agg)
df <- within(df, group_agg <- relevel(group_agg, ref = "Squirrel.Dengue_virus"))

df$prop <- df$nb_fed/df$total

# First value of a line : without subsetting / Second value : with subsetting / Third value : with day 28 (no subsetting)

# strictly equivalent to group_agg syntax
# m0 <- glmmTMB(nb_fed/total ~ NHP*monkey_status + offset(log(int_duration)),
#               data = df,
#               family = binomial(link = "logit"),
#               weights = total,
#               REML = F)

m0 <- glmmTMB(nb_fed/total ~ group_agg + offset(log(int_duration)),
              data = df,
              family = binomial(link = "logit"),
              weights = total,
              REML = F)
MuMIn::AICc(m0) # 1685.655 / 1395.776 / 1914.698

m1 <- glmmTMB(nb_fed/total ~ group_agg + offset(log(int_duration)),
                   data = df,
                   family = betabinomial(link = "logit"),
                   weights = total,
                   dispformula = ~1,
                   REML = F)
MuMIn::AICc(m1) # 1410.098 / 1159.334 / 1586.409

anova(m0,m1)  # signif


m2 <- glmmTMB(nb_fed/total ~ group_agg + offset(log(int_duration)) + (1|ID),
              data = df,
              family = binomial(link = "logit"),
              weights = total,
              REML = F)
MuMIn::AICc(m2) # 1656.872 / 1356.373 / 1872.403

anova(m0,m2) # signif


m3 <- glmmTMB(nb_fed/total ~ group_agg + offset(log(int_duration)) + (1|ID),
              data = df,
              family = betabinomial(link = "logit"),
              weights = total,
              dispformula = ~1 ,
              REML = F)
MuMIn::AICc(m3)  # 1412.212 / 1161.397 / 1588.468

anova(m2,m3) # signif
anova(m1,m3) # not signif

# with or without subsetting, m1 retained
summary(m1)

# Note : this is equivalent to a model with formula  ~ NHP*monkey_status
comp <-  c("Cyno.Dengue_virus - Squirrel.Dengue_virus = 0",
            "Cyno.Zika_virus - Squirrel.Zika_virus = 0",
            "Cyno.Control - Squirrel.Control = 0",
            "Cyno.Dengue_virus - Cyno.Control = 0",
            "Cyno.Zika_virus - Cyno.Control = 0",
            "Squirrel.Dengue_virus - Squirrel.Control = 0",
            "Squirrel.Zika_virus - Squirrel.Control = 0",
            "Squirrel.Dengue_virus - Squirrel.Zika_virus = 0")
tuk = glht(m1, linfct = mcp(group_agg = comp)) 

summary(tuk, test = adjusted("none")) # effect of species : DENV & control + ZIKV/control cyno / idem with subsetting / idem with day 28
summary(tuk, test = adjusted("fdr")) # same / same / same

res <- tidy(confint(tuk))
res$estimate <- exp(res$estimate)
res$conf.low <- exp(res$conf.low)
res$conf.high <- exp(res$conf.high)

# Extract fixed effects coefficients and exponentiate them
# equivalent to what is done above, but less practical to extract all wanted comparisons
fixed_effects <- fixef(m1)$cond
odds_ratios <- exp(fixed_effects)


```


```{r}

df1 <- read.csv("../output/mosq_feeding_behaviour/DENV_Cyno_data_feeding_behaviour_with_total_correct.csv")
df1$NHP <- "Cyno"
df1$virus <- "Dengue virus"

df2 <- read.csv("../output/mosq_feeding_behaviour/DENV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
df2$NHP <- "Squirrel"
df2$virus <- "Dengue virus"

df3 <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
df3$NHP <- "Squirrel"
df3$virus <- "Zika virus"
# removing controls as they're already in df2
df3 <- df3[df3$group != "control",]

df4 <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Cyno_data_feeding_behaviour.csv")
df4$NHP <- "Cyno"
df4$virus <- "Zika virus"
df4$raw_file_inspected <- TRUE

df2$mosq_type <- NULL
df3$mosq_type <- NULL

df <- rbind(df1,df2,df3,df4)
df <- df[df$day != 28,] # REMOVING DAY 28
df$total <- df$total_correct

# df$group_agg <- interaction(df$group,df$NHP,df$virus)
# df$group_agg <- as.character(df$group_agg)
# 
# df$group_agg[which(df$group_agg == "control.Squirrel.Dengue virus")] <- "control.Squirrel"
# df$group_agg[which(df$group_agg == "control.Cyno.Dengue virus")] <- "control.Cyno"

df$monkey_status <- df$virus
df$monkey_status[which(df$group == "control")] <- "Control"
df$prop <- df$nb_fed/df$total

feed_duration <- str_split(df$feed_duration,":")
vec_duration <- sapply(feed_duration,"[[",2)
df$int_duration <- as.integer(vec_duration)

df$prop_time <- df$nb_fed/(df$total * df$int_duration)

# # change order of boxplots
# df$group_agg <- factor(df$group_agg, levels = c("control.Cyno",
#                                                 "infected.Cyno.Dengue virus",
#                                                 "infected.Cyno.Zika virus",
#                                                 "control.Squirrel",
#                                                 "infected.Squirrel.Dengue virus",
#                                                 "infected.Squirrel.Zika virus"))

# No duration ----
df <- df[!is.na(df$int_duration),]

df$group_agg <- interaction(df$NHP,df$monkey_status)
df$group_agg <- gsub(" ","_",df$group_agg) # no space for posthoc test to work
df$group_agg <- as.factor(df$group_agg)
df <- within(df, group_agg <- relevel(group_agg, ref = "Squirrel.Dengue_virus"))
# change order of boxplots
```

```{r}
#| label: plot-data-simple
#| echo: false


newDat <- data.frame(group_agg = unique(df$group_agg))
newDat$int_duration <- median(df$int_duration) # 6 minutes
newDat$total <- 15

pred <- predict(m1, newdata = newDat, se.fit = T)
newDat$pred <- plogis(pred$fit)
# newDat$pred2 <- exp(pred$fit)/(1+exp(pred$fit)) # strictly equivalent
# pred2 <- predict(m1, newdata = newDat, se.fit = T, type = "response") # strictly equivalent
# plogis(pred$fit) # these are probabilities
# exp(pred$fit) # these are the odds : p/(1-p)
# from odds you can compute odd ratios
newDat$lwr <- plogis(pred$fit - 1.96*pred$se.fit)
newDat$upr <- plogis(pred$fit + 1.96*pred$se.fit)
# Could not automate this through str_split
newDat$monkey_status <- c("Dengue virus",
                       "Control",
                       "Dengue virus",
                       "Control",
                       "Zika virus",
                       "Zika virus")

# Model output only (assume equal duration) ----

df$group_agg <- factor(df$group_agg, levels = c("Cyno.Control",
                                                "Cyno.Dengue_virus",
                                                "Cyno.Zika_virus",
                                                "Squirrel.Control",
                                                "Squirrel.Dengue_virus",
                                                "Squirrel.Zika_virus"))

p0 <- ggplot(newDat, aes(x = as.character(group_agg), y = pred)) +
  geom_errorbar(aes(x = as.character(group_agg),
                    ymin = lwr, ymax = upr,
                    color = monkey_status),
                width = 0.1, linewidth = 1.3) +
  geom_point(aes(x = as.character(group_agg),
                 fill = monkey_status,
                 shape = monkey_status),
             color = "#414341",
             stroke = 1.5,
             size = 6) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                               "Zika virus" = "#253dbe",
                               "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#C2c3c9")) +
  scale_shape_manual(values = c("Dengue virus" = 21,
                                "Zika virus" = 22,
                                "Control" = 24)) +
  geom_vline(xintercept = 3.5, alpha = 0.6, linewidth = 1.1, color = "grey") +
  geom_bracket(xmin = "Squirrel.Control", xmax = "Squirrel.Zika_virus",
               y.position = 1.22, label = "ns", size = 1.3, label.size = 11) +
  geom_bracket(xmin = "Cyno.Control", xmax = "Cyno.Zika_virus",
               y.position = 1.22, label = "***", size = 1.3, label.size = 11) +
  geom_bracket(xmin = "Squirrel.Control", xmax = "Squirrel.Dengue_virus",
               y.position = 1.08, label = "ns", size = 1.3, label.size = 11) +
  geom_bracket(xmin = "Cyno.Control", xmax = "Cyno.Dengue_virus",
               y.position = 1.08, label = "ns", size = 1.3, label.size = 11) +
  geom_bracket(xmin = "Cyno.Control", xmax = "Squirrel.Control",
               y.position = 1.36, label = "**", size = 1.3, label.size = 11) +
  geom_bracket(xmin = "Cyno.Dengue_virus", xmax = "Squirrel.Dengue_virus",
               y.position = 1.5, label = "****", size = 1.3, label.size = 11) +
  geom_bracket(xmin = "Cyno.Zika_virus", xmax = "Squirrel.Zika_virus",
               y.position = 1.64, label = "ns", size = 1.3, label.size = 11) +
  labs(y = "Predicted probability<br>of feeding",
       x = "",
       fill = "Monkey status",
       color = "Monkey status",
       shape = "Monkey status") +
  ggtitle("A") +
  guides(fill = guide_legend(order = 1,
                             override.aes = list(alpha = 1, size = 5, linewidth = 1)),
         color = guide_legend(order = 1),
         shape = guide_legend(order = 1)) +
  annotate(geom = "text", label = "Cynomolgus\nmacaques",
           x = 2.32, y = 2, size = 13) +
  annotate(geom = "text", label = "Squirrel\nmonkeys",
           x = 5.34, y = 2, size = 13) +
  scale_y_continuous(limits = c(0,2.2),
                     breaks = c(0,0.25,0.5,0.75,1),
                     expand = expansion(add = 0.01)) + 
  # theme_cowplot() +
  theme_classic() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 30),
        axis.title.y = element_markdown(size = 38,
                                        margin = margin(r = 30, t = 550),
                                        vjust = 0),
        legend.position = c(1.1,0.27),
        plot.margin = unit(c(0,10,0,0.35), "cm"),
        legend.text = element_text(size = 38),
        legend.title = element_text(size = 38),
        plot.title = element_text(size = 32))

img_cyno <- magick::image_read("~/Documents/POSTDOC/Presentations/Images/macaque_outline.png")
img_squirrel <- magick::image_read("~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png")

p1 <- ggplot(df, aes(x = as.character(group_agg), y = prop)) +
  geom_jitter(aes(fill = monkey_status,
                  color = monkey_status,
                  shape = monkey_status),
              size = 6,
              width = 0.23,
              alpha = 0.7) +
  geom_boxplot(alpha = 0, outlier.shape = NA) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                               "Zika virus" = "#253dbe",
                               "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#414341")) +
  scale_shape_manual(values = c("Dengue virus" = 21,
                                "Zika virus" = 22,
                                "Control" = 24)) +
  geom_vline(xintercept = 3.5, alpha = 0.6, linewidth = 1.1, color = "grey") +
  labs(y = "Proportion of<br>fed mosquitoes",
       x = "",
       fill = "Monkey status",
       color = "Monkey status",
       shape = "Monkey status") +
  guides(fill = guide_legend(order = 1,
                             override.aes = list(alpha = 1, size = 5)),
         color = guide_legend(order = 1),
         shape = guide_legend(order = 1)) +
  scale_y_continuous(limits = c(0,1.05),
                     breaks = c(0,0.25,0.5,0.75,1),
                     expand = expansion(add = 0.01)) + 
  # theme_cowplot() +
  ggtitle("B") +
  theme_classic() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 30),
        axis.title.y = element_markdown(size = 38,
                                        margin = margin(r = 30),
                                        vjust = 0),
        legend.position = "none",
        plot.margin = unit(c(0,10,0,0.35), "cm"),
        legend.text = element_text(size = 38),
        legend.title = element_text(size = 38),
        plot.title = element_text(size = 32))

P <- p0 / p1
P <- P + plot_layout(heights = c(2,1))

p_draw <- ggdraw() + 
  draw_plot(P) +
  draw_image(image = img_cyno, 
             x = 0.15, y = 0.87, scale = 0.1,
             valign = 0, halign = 0) +
  draw_image(image = img_squirrel, 
             x = 0.51, y = 0.87, scale = 0.1,
             valign = 0, halign = 0)

png(filename = here("output","mosq_feeding_behaviour","figures","other_days_no_duration_errorbar.png"),
    width = 1600, height = 1600)
print(p_draw)
dev.off()

# Data and model comparisons ----
compare_means(prop ~ group_agg, data = df, method = "t.test")
# that's the p-values that would be printed / not exactly the same as ours
# I'll tweak the threshold for the significance labeling
# I am not forging results ! Just relying on my initial model fit, 
# more suited to the dataset than a simple t-test

# control sq vs cyno : 0.039 (*) needs to become **
# denv cyno vs squirrel : 7.3e-8 (****) needs to stay ****
# control cyno vs zikv cyno : 0.06 (ns) needs to become ***
# not possible : use a label to put over the text

summary(df$int_duration/max(df$int_duration))
summary(df$int_duration)
# 3, 6, 9, 12, 16

# the results will be showed as brackets from bottom to top if you don't specify label.y
comp <- list(c("infected.Squirrel.Zika virus","control.Squirrel"),
             c("infected.Cyno.Zika virus","control.Cyno"),
             c("infected.Squirrel.Dengue virus","control.Squirrel"),
             c("infected.Cyno.Dengue virus","control.Cyno"),
             c("control.Cyno","control.Squirrel"),
             c("infected.Cyno.Dengue virus","infected.Squirrel.Dengue virus"),
             c("infected.Cyno.Zika virus","infected.Squirrel.Zika virus"))

# theme_set(theme_cowplot())
p <- ggplot(df, aes(x = group_agg, y = prop)) +
  geom_jitter(aes(fill = monkey_status,
                  color = monkey_status,
                  shape = monkey_status),
              size = 5,
              width = 0.25,
              alpha = 0.7) +
  geom_boxplot(alpha = 0, outlier.shape = NA) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("Dengue virus" = "#1c812b",
                               "Zika virus" = "#253dbe",
                               "Control" = "#414341")) +
  scale_shape_manual(values = c("Dengue virus" = 21,
                                "Zika virus" = 22,
                                "Control" = 24)) +
  geom_vline(xintercept = 3.5, alpha = 0.6, linewidth = 1.1, color = "grey") +
  stat_compare_means(comparisons = comp,
                     method = "t.test",
                     paired = FALSE,
                     label = "p.signif",
                     size = 9,
                     tip.length =  0.025,
                     label.y = c(1.22,1.22,1.08,1.08,1.36,1.5,1.64),
                     bracket.size = 1.02,
                     symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.04, 0.05, Inf),
                                        symbols = c("****", "***", "**", "*", "ns"))) +
  labs(y = "Proportion of<br>fed mosquitoes",
       x = "",
       fill = "Monkey status",
       color = "Monkey status",
       shape = "Monkey status") +
  guides(fill = guide_legend(order = 1,
                             override.aes = list(alpha = 1, size = 5)),
         color = guide_legend(order = 1),
         shape = guide_legend(order = 1)) +
  annotate(geom = "text", label = "Cynomolgus\nmacaques",
           x = 2.32, y = 2, size = 13) +
  annotate(geom = "text", label = "Squirrel\nmonkeys",
           x = 5.34, y = 2, size = 13) +
  annotate(geom = "label", label = "***",
           fill = "white", label.size = NA,
           x = 2, y = 1.365, size = 9) +
  scale_y_continuous(limits = c(0,2.2),
                     breaks = c(0,0.25,0.5,0.75,1),
                     expand = expansion(add = 0.018)) + 
  theme_cowplot() +
  # theme_classic() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 30),
        axis.title.y = element_markdown(size = 38,
                                    margin = margin(r = 20, t = 390),
                                    vjust = 0),
        legend.position = c(1.0,0.27),
        plot.margin = unit(c(0,10,0,0.35), "cm"),
        legend.text = element_text(size = 38),
        legend.title = element_text(size = 38))
# FYI / default values
# ns: p > 0.05
# 
# *: p <= 0.05
# 
# **: p <= 0.01
# 
# ***: p <= 0.001
# 
# ****: p <= 0.0001

img_cyno <- magick::image_read("~/Documents/POSTDOC/Presentations/Images/macaque_outline.png")
img_squirrel <- magick::image_read("~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png")

p_draw <- ggdraw() + 
  draw_plot(p) +
  draw_image(image = img_cyno, 
             x = 0.2, y = 0.87, scale = 0.1,
             valign = 0, halign = 0) +
  draw_image(image = img_squirrel, 
             x = 0.56, y = 0.87, scale = 0.1,
             valign = 0, halign = 0)

png(filename = here("output","mosq_feeding_behaviour","figures","other_days_no_duration.png"), width = 1600, height = 750)
print(p_draw)
dev.off()

# TROPMED VERSION -----

comp <- list(c("infected.Cyno.Zika virus","control.Cyno"),
             c("control.Cyno","control.Squirrel"),
             c("infected.Cyno.Dengue virus","infected.Squirrel.Dengue virus"))


p <- ggplot(df, aes(x = group_agg, y = prop)) +
  geom_jitter(aes(fill = monkey_status,
                  color = monkey_status,
                  shape = monkey_status),
              size = 5,
              width = 0.25,
              alpha = 0.7) +
  geom_boxplot(alpha = 0, outlier.shape = NA) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("Dengue virus" = "#1c812b",
                               "Zika virus" = "#253dbe",
                               "Control" = "#414341")) +
  scale_shape_manual(values = c("Dengue virus" = 21,
                                "Zika virus" = 22,
                                "Control" = 24)) +
  geom_vline(xintercept = 3.5, alpha = 0.6, linewidth = 1.1, color = "grey") +
  stat_compare_means(comparisons = comp,
                     method = "t.test",
                     paired = FALSE,
                     label = "p.signif",
                     size = 9,
                     tip.length =  0.025,
                     label.y = c(1.22,1.36,1.5),
                     bracket.size = 1.02,
                     symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.04, 0.05, Inf),
                                        symbols = c("****", "***", "**", "*", "ns"))) +
  labs(y = "Proportion of<br>fed mosquitoes",
       x = "",
       fill = "Monkey status",
       color = "Monkey status",
       shape = "Monkey status") +
  guides(fill = guide_legend(order = 1,
                             override.aes = list(alpha = 1, size = 5)),
         color = guide_legend(order = 1),
         shape = guide_legend(order = 1)) +
  annotate(geom = "text", label = "Cynomolgus\nmacaques",
           x = 2.32, y = 2, size = 13) +
  annotate(geom = "text", label = "Squirrel\nmonkeys",
           x = 5.34, y = 2, size = 13) +
  annotate(geom = "label", label = "***",
           fill = "white", label.size = NA,
           x = 2, y = 1.365, size = 9) +
  scale_y_continuous(limits = c(0,2.2),
                     breaks = c(0,0.25,0.5,0.75,1),
                     expand = expansion(add = 0.018)) + 
  theme_cowplot() +
  # theme_classic() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 30),
        axis.title.y = element_markdown(size = 38,
                                    margin = margin(r = 20, t = 390),
                                    vjust = 0),
        legend.position = c(1.0,0.27),
        plot.margin = unit(c(0,10,0,0.35), "cm"),
        legend.text = element_text(size = 38),
        legend.title = element_text(size = 38))
# FYI / default values
# ns: p > 0.05
# 
# *: p <= 0.05
# 
# **: p <= 0.01
# 
# ***: p <= 0.001
# 
# ****: p <= 0.0001

img_cyno <- magick::image_read("~/Documents/POSTDOC/Presentations/Images/macaque_outline.png")
img_squirrel <- magick::image_read("~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png")

p_draw <- ggdraw() + 
  draw_plot(p) +
  draw_image(image = img_cyno, 
             x = 0.2, y = 0.87, scale = 0.1,
             valign = 0, halign = 0) +
  draw_image(image = img_squirrel, 
             x = 0.56, y = 0.87, scale = 0.1,
             valign = 0, halign = 0)

png(filename = here("output","mosq_feeding_behaviour","figures","TROPMED2_other_days_no_duration.png"), width = 1600, height = 750)
print(p_draw)
dev.off()

```

```{r}
#| label: old-plot-data-simple
#| echo: false

df1 <- read.csv("../output/mosq_feeding_behaviour/DENV_Cyno_data_feeding_behaviour_with_total_correct.csv")
df1$NHP <- "Cyno"
df1$virus <- "Dengue virus"

df2 <- read.csv("../output/mosq_feeding_behaviour/DENV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
df2$NHP <- "Squirrel"
df2$virus <- "Dengue virus"

df3 <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
df3$NHP <- "Squirrel"
df3$virus <- "Zika virus"
# removing controls as they're already in df2
df3 <- df3[df3$group != "control",]

df4 <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Cyno_data_feeding_behaviour.csv")
df4$NHP <- "Cyno"
df4$virus <- "Zika virus"
df4$raw_file_inspected <- TRUE

df2$mosq_type <- NULL
df3$mosq_type <- NULL

df <- rbind(df1,df2,df3,df4)
df <- df[df$day != 28,] # REMOVING DAY 28
df$total <- df$total_correct

df$group_agg <- interaction(df$group,df$NHP,df$virus)
df$group_agg <- as.character(df$group_agg)

df$group_agg[which(df$group_agg == "control.Squirrel.Dengue virus")] <- "control.Squirrel"
df$group_agg[which(df$group_agg == "control.Cyno.Dengue virus")] <- "control.Cyno"

df$monkey_status <- df$virus
df$monkey_status[which(df$group == "control")] <- "Control"
df$prop <- df$nb_fed/df$total

feed_duration <- str_split(df$feed_duration,":")
vec_duration <- sapply(feed_duration,"[[",2)
df$int_duration <- as.integer(vec_duration)

df$prop_time <- df$nb_fed/(df$total * df$int_duration)

# change order of boxplots
df$group_agg <- factor(df$group_agg, levels = c("control.Cyno",
                                                "infected.Cyno.Dengue virus",
                                                "infected.Cyno.Zika virus",
                                                "control.Squirrel",
                                                "infected.Squirrel.Dengue virus",
                                                "infected.Squirrel.Zika virus"))

# Without duration ----
compare_means(prop ~ group_agg, data = df, method = "t.test")
# that's the p-values that would be printed / not exactly the same as ours
# I'll tweak the threshold for the significance labeling
# I am not forging results ! Just relying on my initial model fit, 
# more suited to the dataset than a simple t-test

# the results will be showed as brackets from bottom to top if you don't specify label.y
comp <- list(c("infected.Cyno.Dengue virus","infected.Squirrel.Dengue virus"),
             c("control.Cyno","control.Squirrel"),
             c("infected.Cyno.Dengue virus","control.Cyno"),
             c("infected.Squirrel.Dengue virus","control.Squirrel"),
             c("infected.Squirrel.Zika virus","control.Squirrel"))

# theme_set(theme_cowplot())
p <- ggplot(df, aes(x = group_agg, y = prop)) +
  geom_jitter(aes(fill = monkey_status,
                  color = monkey_status,
                  shape = monkey_status),
              width = 0.15,
              size = 3, alpha = 0.7) +
  geom_boxplot(alpha = 0, outlier.shape = NA) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("Dengue virus" = "#1c812b",
                               "Zika virus" = "#253dbe",
                               "Control" = "#414341")) +
  scale_shape_manual(values = c("Dengue virus" = 21,
                                "Zika virus" = 22,
                                "Control" = 24)) +
  stat_compare_means(comparisons = comp,
                     method = "t.test",
                     paired = FALSE,
                     label = "p.signif",
                     size = 8,
                     label.y = c(1.43,1.28,1.03,1.03,1.15),
                     bracket.size = 1.02) +
  #symnum.args = list(cutpoints = c(0, 0.0001, 0.009, 0.01, 0.05, Inf),
                                         # symbols = c("****", "***", "**", "*", "ns")) # with day 28
  geom_vline(xintercept = 2.5, alpha = 0.6) +
  labs(y = "Proportion of fed mosquitoes", x = "",
                         fill = "Monkey status",
                         color = "Monkey status",
                         shape = "Monkey status") +
  guides(fill = guide_legend(override.aes = list(alpha = 1))) +
  annotate(geom = "text", label = "Cynomolgus\nmacaques",
           x = 1.75, y = 1.75, size = 8) +
  annotate(geom = "text", label = "Squirrel\nmonkeys",
           x = 4.25, y = 1.75, size = 8) +
  # annotate(geom = "text", label = "Proportion of fed mosquitoes",
  #          x = -4, y = 0.5, size = 8, angle = 90) +
  scale_y_continuous(limits = c(0,1.85),
                     breaks = c(0,0.25,0.5,0.75,1),
                     expand = expansion(add = 0.01)) + 
  theme_cowplot() +
  # theme_classic() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 22),
        axis.title.y = element_markdown(size = 22,
                                    margin = margin(r = 15, t = 340),
                                    vjust = 0),
        legend.position = c(1.05,0.27),
        plot.margin = unit(c(0,8,0,1), "cm"),
        legend.text = element_text(size = 24),
        legend.title = element_text(size = 24))
# FYI / default values
# ns: p > 0.05
# 
# *: p <= 0.05
# 
# **: p <= 0.01
# 
# ***: p <= 0.001
# 
# ****: p <= 0.0001

p_draw <- ggdraw() + 
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/macaque_outline.png",
             x = -0.34, y = 0.45, scale = 0.1) +
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png",
             x = 0, y = 0.45, scale = 0.1) +
  draw_plot(p)

png(filename = here("output","mosq_feeding_behaviour","figures","infected_control_feeding_prop_boxplot_no_day28_NO_DURATION.png"), width = 1000, height = 750)
print(p_draw)
dev.off()

# With duration ----
compare_means(prop_time ~ group_agg, data = df, method = "t.test")
# that's the p-values that would be printed / not exactly the same as ours
# I'll tweak the threshold for the significance labeling
# I am not forging results ! Just relying on my initial model fit, 
# more suited to the dataset than a simple t-test

# the results will be showed as brackets from bottom to top if you don't specify label.y
comp <- list(c("infected.Squirrel.Zika virus","control.Squirrel"),
             c("infected.Cyno.Zika virus","control.Cyno"),
             c("infected.Squirrel.Dengue virus","control.Squirrel"),
             c("infected.Cyno.Dengue virus","control.Cyno"),
             c("control.Cyno","control.Squirrel"),
             c("infected.Cyno.Dengue virus","infected.Squirrel.Dengue virus"),
             c("infected.Cyno.Zika virus","infected.Squirrel.Zika virus"))

# theme_set(theme_cowplot())
p <- ggplot(df, aes(x = group_agg, y = prop_time)) +
  geom_jitter(aes(fill = monkey_status,
                  color = monkey_status,
                  shape = monkey_status),
              width = 0.15,
              size = 3, alpha = 0.7) +
  geom_boxplot(alpha = 0, outlier.shape = NA) +
  scale_fill_manual(values = c("Dengue virus" = "#1c812b",
                                "Zika virus" = "#253dbe",
                                "Control" = "#C2c3c9")) +
  scale_color_manual(values = c("Dengue virus" = "#1c812b",
                               "Zika virus" = "#253dbe",
                               "Control" = "#414341")) +
  scale_shape_manual(values = c("Dengue virus" = 21,
                                "Zika virus" = 22,
                                "Control" = 24)) +
  stat_compare_means(comparisons = comp,
                     method = "t.test",
                     paired = FALSE,
                     label = "p.signif",
                     size = 8,
                     tip.length =  0.025,
                     label.y = c(0.34,0.34,0.30,0.30,0.38,0.42,0.46),
                     bracket.size = 1.02,
                     symnum.args = list(cutpoints = c(0, 0.00000059, 0.0000032, 0.01, 0.05, Inf),
                                        symbols = c("****", "***", "**", "*", "ns"))) +
  geom_vline(xintercept = 3.5, alpha = 0.6) +
  labs(y = "Proportion of fed mosquitoes<br>normalized by duration<br>of exposure (min<sup>-1</sup>)",
       x = "",
       fill = "Monkey status",
       color = "Monkey status",
       shape = "Monkey status") +
  guides(fill = guide_legend(override.aes = list(alpha = 1))) +
  annotate(geom = "text", label = "Cynomolgus\nmacaques",
           x = 2.25, y = 0.56, size = 8) +
  annotate(geom = "text", label = "Squirrel\nmonkeys",
           x = 5.25, y = 0.56, size = 8) +
  # annotate(geom = "text", label = "Proportion of fed mosquitoes",
  #          x = -4, y = 0.5, size = 8, angle = 90) +
  scale_y_continuous(limits = c(0,0.58),
                     breaks = c(0,0.05,0.1,0.15,0.2,0.25,0.3),
                     expand = expansion(add = 0.01)) + 
  theme_cowplot() +
  # theme_classic() +
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 22),
        axis.title.y = element_markdown(size = 22,
                                    margin = margin(r = 15, t = 340),
                                    vjust = 0),
        legend.position = c(1.05,0.27),
        plot.margin = unit(c(0,7.5,0,0.35), "cm"),
        legend.text = element_text(size = 24),
        legend.title = element_text(size = 24))
# FYI / default values
# ns: p > 0.05
# 
# *: p <= 0.05
# 
# **: p <= 0.01
# 
# ***: p <= 0.001
# 
# ****: p <= 0.0001

p_draw <- ggdraw() + 
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/macaque_outline.png",
             x = -0.29, y = 0.45, scale = 0.1) +
  draw_image(image = "~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png",
             x = 0.04, y = 0.45, scale = 0.1) +
  draw_plot(p)

png(filename = here("output","mosq_feeding_behaviour","figures","infected_control_feeding_prop_boxplot_ZIKV_Cyno.png"), width = 1000, height = 750)
print(p_draw)
dev.off()


```

```{r}
#| label: complete-models-with-duration-as-OFFSET
#| echo: false

# Merging datasets -----
zikv_sq_data <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
zikv_sq_data$species <- "Squirrel"
zikv_sq_data$virus <- "Zika"
zikv_sq_data$virus[zikv_sq_data$group == "control"] <- "none"

zikv_cy_data <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Cyno_data_feeding_behaviour.csv")
zikv_cy_data$species <- "Cyno"
zikv_cy_data$virus <- "Zika"
zikv_cy_data$raw_file_inspected <- TRUE

denv_sq_data <- read.csv("../output/mosq_feeding_behaviour/DENV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
denv_sq_data$species <- "Squirrel"
denv_sq_data$virus <- "Dengue"
denv_sq_data$virus[denv_sq_data$group == "control"] <- "none"

denv_cy_data <- read.csv("../output/mosq_feeding_behaviour/DENV_Cyno_data_feeding_behaviour_with_total_correct.csv")
denv_cy_data$species <- "Cyno"
denv_cy_data$virus <- "Dengue"
denv_cy_data$virus[denv_cy_data$group == "control"] <- "none"

denv_sq_data$mosq_type <- NULL
zikv_sq_data$mosq_type <- NULL

my_data <- rbind(zikv_sq_data, zikv_cy_data, denv_sq_data, denv_cy_data)
my_data <- unique(my_data) # removes redundant control squirrels
my_data$total <- my_data$total_correct

my_data$time_feed <- my_data$dec - my_data$day

my_data$sex <- as.factor(my_data$sex)
my_data <- within(my_data, sex <- relevel(sex, ref = "M"))
my_data$species <- as.factor(my_data$species)
my_data <- within(my_data, species <- relevel(species, ref = "Squirrel"))
my_data$virus <- as.factor(my_data$virus)
my_data <- within(my_data, virus <- relevel(virus, ref = "Dengue"))
# here virus is equivalent of monkey_status in the simple model

feed_duration <- str_split(my_data$feed_duration,":")
vec_duration <- sapply(feed_duration,"[[",2)
my_data$int_duration <- as.integer(vec_duration)

df1 <- my_data # 331 obs
df2 <- my_data[my_data$day != 28,] # 293 obs

# WITHOUT DAY 28 ----
mod0 <- glmmTMB(nb_fed/total ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  offset(log(int_duration)),
                family = binomial(link = "logit"),
                weights = total,
                REML = F,
                data = df2)
MuMIn::AICc(mod0) # 1705.617
simulateResiduals(mod0, plot = T) # issues
testDispersion(mod0) # signif
testZeroInflation(mod0) # signif

mod1 <- glmmTMB(nb_fed/total ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  offset(log(int_duration)),
                family = betabinomial(link = "logit"),
                weights = total,
                REML = F,
                data = df2)
MuMIn::AICc(mod1) # 1424.355
simulateResiduals(mod1, plot = T) # issues (less in QQ plot)
testDispersion(mod1) # signif
testZeroInflation(mod1) # no longer signif

anova(mod0,mod1) # signif

mod2 <- glmmTMB(nb_fed/total ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  offset(log(int_duration)) +
                  (1|ID) + (1|day),
                family = binomial(link = "logit"),
                weights = total,
                REML = F,
                data = df2)
MuMIn::AICc(mod2) # 1608.354
simulateResiduals(mod2, plot = T) # issues
testDispersion(mod2) # not signif
testZeroInflation(mod2) # signif

df2 <- within(df2, species <- relevel(species, ref = "Cyno"))

mod3 <- glmmTMB(nb_fed/total ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  offset(log(int_duration)) +
                  (1|ID) + (1|day),
                family = betabinomial(link = "logit"),
                weights = total,
                REML = F,
                data = df2)
MuMIn::AICc(mod3) # 1420.332
simulateResiduals(mod3, plot = T) # issues
testDispersion(mod3) # signif
testZeroInflation(mod3) # not signif

anova(mod0,mod2) # in favour of random effects with binomial
anova(mod1,mod3) # in favour of random effects with betabinomial
anova(mod2,mod3) # in favour of betabinomial with random effects

data_to_predict <- datagrid(model = mod3,
                            species = rep(c("Squirrel","Cyno"), each = 31),
                            temp_estim_feed = rep(seq(37,40,0.1),2))

pp <- predict(mod3, newdata = data_to_predict, se.fit = TRUE)
data_to_predict$ci_lwr <- with(pp, plogis(fit + qnorm(0.025)*se.fit))
data_to_predict$ci_upr <- with(pp, plogis(fit + qnorm(0.975)*se.fit))
data_to_predict$means <- with(pp, plogis(fit))

ggplot() + geom_line(data = data_to_predict,
                     aes(x = temp_estim_feed,
                         y = means,
                         group = species,
                         color = species)) +
  geom_line(data = data_to_predict,
                     aes(x = temp_estim_feed,
                         y = ci_upr,
                         group = species,
                         color = species), linetype = "dashed") +
geom_line(data = data_to_predict,
                     aes(x = temp_estim_feed,
                         y = ci_lwr,
                         group = species,
                         color = species), linetype = "dashed") +
  geom_point(data = df2, aes(x = temp_estim_feed,
                             y = nb_fed/total,
                             size = int_duration/max(int_duration),
                             color = species))

summary(mod3) 
## With ZIKV Cyno
# effect of temperature in squirrels:
# scale(temp_estim_feed)              0.33699    0.14366   2.346   0.0190 *
# but not in cynos : 
# scale(temp_estim_feed)                 -0.02141    0.16476  -0.130   0.8966

exp(fixef(mod3)$cond)
exp(confint(mod3))
# squirrels : 1.40 [1.06 ; 1.86] for scale(temp_estim_feed)
# cynos : 0.98 [0.71 ; 1.35]
car::Anova(mod3, type = "II") 
# With ZIKV Cyno
# species (0.012) 

car::Anova(mod3, type = "III") # same as summary

plot(allEffects(mod3, partial.residuals = T))


# WITH DAY 28 ----
mod0 <- glmmTMB(nb_fed/total ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  offset(log(int_duration)),
                family = binomial(link = "logit"),
                weights = total,
                REML = F,
                data = df1)
MuMIn::AICc(mod0) # 1928.931
simulateResiduals(mod0, plot = T) # issues 
testDispersion(mod0) # signif
testZeroInflation(mod0) # signif

mod1 <- glmmTMB(nb_fed/total ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  offset(log(int_duration)),
                family = betabinomial(link = "logit"),
                weights = total,
                REML = F,
                data = df1)
MuMIn::AICc(mod1) # 1598.4
simulateResiduals(mod1, plot = T) # issues (less in the QQplot)
testDispersion(mod1) # still signif
testZeroInflation(mod1) # not signif

mod2 <- glmmTMB(nb_fed/total ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  offset(log(int_duration)) +
                  (1|ID) + (1|day),
                family = binomial(link = "logit"),
                weights = total,
                REML = F,
                data = df1)
MuMIn::AICc(mod2) # 1822.823
simulateResiduals(mod2, plot = T) # issues
testDispersion(mod2) # not signif
testZeroInflation(mod2) # signif

df1 <- within(df1, species <- relevel(species, ref = "Cyno"))

mod3 <- glmmTMB(nb_fed/total ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  offset(log(int_duration)) +
                  (1|ID) + (1|day),
                family = betabinomial(link = "logit"),
                weights = total,
                REML = F,
                data = df1)
MuMIn::AICc(mod3) # 1593.817
simulateResiduals(mod3, plot = T) # mainly heteroskedasticity
testDispersion(mod3) # signif
testZeroInflation(mod3) # not signif

anova(mod0,mod2) # in favour of random effects with binomial
anova(mod1,mod3) # in favour of random effects with betabinomial
anova(mod2, mod3) # in favour of betabinomial with random effects

summary(mod3) 
# effect of time of day (0.00184)
# and effect of temperature in squirrels
# scale(temp_estim_feed)              0.31262    0.13822   2.262  0.02372 * 
# but not in cynos
# scale(temp_estim_feed)                 -0.005228   0.161544  -0.032  0.97419

car::Anova(mod3, type = "II") 
# With ZIKV Cyno
# species (0.015), time of day (0.0018)



```

```{r}
#| label: complete-models-with-duration-as-weight
#| echo: false

# Merging datasets -----
zikv_sq_data <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
zikv_sq_data$species <- "Squirrel"
zikv_sq_data$virus <- "Zika"
zikv_sq_data$virus[zikv_sq_data$group == "control"] <- "none"

zikv_cy_data <- read.csv("../output/mosq_feeding_behaviour/ZIKV_Cyno_data_feeding_behaviour.csv")
zikv_cy_data$species <- "Cyno"
zikv_cy_data$virus <- "Zika"
zikv_cy_data$raw_file_inspected <- TRUE

denv_sq_data <- read.csv("../output/mosq_feeding_behaviour/DENV_Squirrel_data_feeding_behaviour_with_total_correct.csv")
denv_sq_data$species <- "Squirrel"
denv_sq_data$virus <- "Dengue"
denv_sq_data$virus[denv_sq_data$group == "control"] <- "none"

denv_cy_data <- read.csv("../output/mosq_feeding_behaviour/DENV_Cyno_data_feeding_behaviour_with_total_correct.csv")
denv_cy_data$species <- "Cyno"
denv_cy_data$virus <- "Dengue"
denv_cy_data$virus[denv_cy_data$group == "control"] <- "none"

denv_sq_data$mosq_type <- NULL
zikv_sq_data$mosq_type <- NULL

my_data <- rbind(zikv_sq_data, zikv_cy_data, denv_sq_data, denv_cy_data)
my_data <- unique(my_data) # removes redundant control squirrels
my_data$total <- my_data$total_correct

my_data$time_feed <- my_data$dec - my_data$day

my_data$sex <- as.factor(my_data$sex)
my_data <- within(my_data, sex <- relevel(sex, ref = "M"))
my_data$species <- as.factor(my_data$species)
my_data <- within(my_data, species <- relevel(species, ref = "Squirrel"))
my_data$virus <- as.factor(my_data$virus)
my_data <- within(my_data, virus <- relevel(virus, ref = "Dengue"))
# here virus is equivalent of monkey_status in the simple model

feed_duration <- str_split(my_data$feed_duration,":")
vec_duration <- sapply(feed_duration,"[[",2)
my_data$int_duration <- as.integer(vec_duration)

df1 <- my_data # 331 obs
df2 <- my_data[my_data$day != 28,] # 293 obs

# + offset(x) in formula equivalent to offset = x
# cbind(nb_fed, total - nb_fed) equivalent to nb_fed/total + weights = total
# binomial : offset(log(duration)) or offset(duration) not equivalent to nb_fed/(total*duration) + weights = total*duration / I don't know how to use offset in binomial
# poisson nb_fed with offset(log(duration*total)) almost the same as binomial nb_fed/(total*duration) + weights = total*duration / better to use offset with a poisson for the full denominator, or use weights in binomial / poisson prefered by AICc
# still true with scaled variables / no need to worry about scaling in the offset, as the effect is fixed at 1
# once scale(duration) incorporated as variable, poisson and binomial model no longer equivalent
# in poisson and binomial, scale(duration) or scale(log(duration)) does not change things too much
# in poisson and binomial : log(scale(duration)) (way better AICc but warning productions of NaN) really different from scale(log(duration))

# biologically, it makes more sense to use duration as an offset, rather than letting it have a negative effect as a variable -> it only reflects that we let mosquitoes feed longer on squirrel monkeys, hoping to increase their engorgement compared to cynos, but observed the opposite : this probably means that the species difference is even stronger than it appears

# what should we do for the simple models, and in figures? <------ TO CHECK

# and as the number of fed mosquitoes has a maximum, due to cartons size, logistic is better suited than poisson (unbounded by nature)

# once we're settled on this formulation, logit and cloglog does not change things much

# WITHOUT DAY 28 ----
# 2nd AICc values are with ZIKV cyno
mod0 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species,
                family = binomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df2)
MuMIn::AICc(mod0) # 1538.525 / 1739.62
simulateResiduals(mod0, plot = T) # issues
testDispersion(mod0) # signif
testZeroInflation(mod0) # not signif
summary(mod0)

mod1 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species,
                family = betabinomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df2)
MuMIn::AICc(mod1) # 1451.849 / 1645.864
simulateResiduals(mod1, plot = T) # dispersion issue only
testDispersion(mod1) # still signif
testZeroInflation(mod1) # not signif
summary(mod1)

# plotResiduals(mod1, scale(df2$time_feed)) # not signif
# plotResiduals(mod1, df2$virus) # not signif
# plotResiduals(mod1, df2$viremia) # not signif
# plotResiduals(mod1, df2$sex) # signif but no strong issue
# plotResiduals(mod1, df2$species) # signif but no strong issue
# plotResiduals(mod1, scale(df2$weight)) # signif
# plotResiduals(mod1, scale(df2$temp_estim_feed)) # not signif

# test incorporating signif ones in dispformula : done without ZIKV cyno
# mod2 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
#                           virus +
#                           sex +
#                           scale(weight)*species +
#                           scale(time_feed) +
#                           scale(temp_estim_feed)*species,
#                 family = betabinomial(link = "logit"),
#                 weights = total*int_duration,
#                 dispformula = ~ sex + species + scale(weight),
#                 REML = F,
#                 data = df2)
# MuMIn::AICc(mod2) # 1442.624
# simulateResiduals(mod2, plot = T) # less issues
# testDispersion(mod2) # still signif
# testZeroInflation(mod2) # no longer signif
# summary(mod2) # dispersion params are not signif
# plotResiduals(mod2, df2$sex) # still signif
# plotResiduals(mod2, df2$species) # no longer signif
# plotResiduals(mod2, scale(df2$weight)) # no longer signif

anova(mod0,mod1) # in favour of mod1
# anova(mod1,mod2) # in favour of mod2, but dispersion issues remain, is it worth it?

mod3 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  (1|ID) + (1|day),
                family = binomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df2)
MuMIn::AICc(mod3) # 1491.06 / 1689.534
simulateResiduals(mod3, plot = T) # issues
testDispersion(mod3) # signif
testZeroInflation(mod3) # not signif
summary(mod3)

df2 <- within(df2, species <- relevel(species, ref = "Cyno"))

mod4 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  (1|ID) + (1|day),
                family = betabinomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df2)
MuMIn::AICc(mod4) # 1437.631 / 1634.374
simulateResiduals(mod4, plot = T) # dispersion issue
testDispersion(mod4) # still signif
testZeroInflation(mod4) # not signif
summary(mod4)

data_to_predict <- datagrid(model = mod4,
                            species = rep(c("Squirrel","Cyno"), each = 31),
                            temp_estim_feed = rep(seq(37,40,0.1),2))

pp <- predict(mod4, newdata = data_to_predict, se.fit = TRUE)
data_to_predict$ci_lwr <- with(pp, plogis(fit + qnorm(0.025)*se.fit))
data_to_predict$ci_upr <- with(pp, plogis(fit + qnorm(0.975)*se.fit))
data_to_predict$means <- with(pp, plogis(fit))

ggplot() + geom_line(data = data_to_predict,
                     aes(x = temp_estim_feed,
                         y = means,
                         group = species,
                         color = species)) +
  geom_line(data = data_to_predict,
                     aes(x = temp_estim_feed,
                         y = ci_upr,
                         group = species,
                         color = species), linetype = "dashed") +
geom_line(data = data_to_predict,
                     aes(x = temp_estim_feed,
                         y = ci_lwr,
                         group = species,
                         color = species), linetype = "dashed") +
  geom_point(data = df2, aes(x = temp_estim_feed,
                             y = nb_fed/(total*int_duration),
                             color = species))
# unscale variable
mod4_ns <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight, center = T, scale = F)*species +
                          scale(time_feed, center = T, scale = F) +
                          scale(temp_estim_feed, center = T, scale = F)*species +
                  (1|ID) + (1|day),
                family = betabinomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df2)
MuMIn::AICc(mod4_ns) # 1437.631, same as mod4
summary(mod4_ns) # NaN when we don't scale at all or when we only center

anova(mod0,mod3) # in favour of random effects with binomial
anova(mod1,mod4) # in favour of random effects with betabinomial
anova(mod3,mod4) # in favour of betabinomial with random effects

# mod5 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
#                           virus +
#                           sex +
#                           scale(weight)*species +
#                           scale(time_feed) +
#                           scale(temp_estim_feed)*species +
#                   (1|ID) + (1|day),
#                 family = betabinomial(link = "logit"),
#                 weights = total*int_duration,
#                 dispformula = ~ sex + species + scale(weight),
#                 REML = F,
#                 data = df2)
# model convergence problem

summary(mod4) 
## With ZIKV Cyno
# effect of temperature in squirrels:
# scale(temp_estim_feed)              0.15774    0.07122   2.215  0.02677 *
# but not in cynos : 
# scale(temp_estim_feed)                  0.05992    0.07391   0.811    0.418

## Without ZIKV Cyno
# time of feeding (0.044) and temperature (0.018)
# Squirrel : effect of temp
# scale(temp_estim_feed)              0.166374   0.070405   2.363 0.018124 *
# Cyno : effect of temp
# scale(temp_estim_feed)                  0.042596   0.074539   0.571   0.5677

exp(fixef(mod4)$cond)
exp(confint(mod4))
car::Anova(mod4, type = "II") 
# With ZIKV Cyno
# species (0.01347) and temperature (0.03540)
# Without ZIKV Cyno
# time of feeding (0.044) and temperature (0.040) / species 0.054
car::Anova(mod4, type = "III") # same as summary

plot(allEffects(mod4, partial.residuals = T))

# AICc bigger now than when we had duration as a variable, but prediction is not the only thing to prioritize, we want to be as close as possibe to causal inference?

# WITH DAY 28 ----
# 2nd AICc values are with ZIKV Cyno
mod0 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species,
                family = binomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df1)
MuMIn::AICc(mod0) # 1755.476 / 1975.311
simulateResiduals(mod0, plot = T) # issues 
testDispersion(mod0) # signif
testZeroInflation(mod0) # not signif
summary(mod0)

mod1 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species,
                family = betabinomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df1)
MuMIn::AICc(mod1) # 1650.845 / 1862.854
simulateResiduals(mod1, plot = T) # dispersion issues only
testDispersion(mod1) # still signif
testZeroInflation(mod1) # not signif
summary(mod1)

# done without ZIKV Cyno
# plotResiduals(mod1, scale(df1$time_feed)) # not signif
# plotResiduals(mod1, df1$virus) # not signif
# plotResiduals(mod1, df1$viremia) # not signif
# plotResiduals(mod1, df1$sex) # signif but no strong issue
# plotResiduals(mod1, df1$species) # signif but no strong issue
# plotResiduals(mod1, scale(df1$weight)) # signif
# plotResiduals(mod1, scale(df1$temp_estim_feed)) # not signif

# # test incorporating signif ones in dispformula
# mod2 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
#                           virus +
#                           sex +
#                           scale(weight)*species +
#                           scale(time_feed) +
#                           scale(temp_estim_feed)*species,
#                 family = betabinomial(link = "logit"),
#                 weights = total*int_duration,
#                 dispformula = ~ sex + species + scale(weight),
#                 REML = F,
#                 data = df1)
# MuMIn::AICc(mod2) # 1640.794
# simulateResiduals(mod2, plot = T) # less issues
# testDispersion(mod2) # still signif
# testZeroInflation(mod2) # no longer signif
# summary(mod2) # dispersion params are not signif
# plotResiduals(mod2, df1$sex) # still signif
# plotResiduals(mod2, df1$species) # no longer signif
# plotResiduals(mod2, scale(df1$weight)) # no longer signif
# 
# anova(mod0,mod1) # in favour of mod1
# anova(mod1,mod2) # in favour of mod2, but dispersion issues remain, is it worth it?

mod3 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  (1|ID) + (1|day),
                family = binomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df1)
MuMIn::AICc(mod3) # 1704.114 / 1922.383
simulateResiduals(mod3, plot = T) # issues
testDispersion(mod3) # signif
testZeroInflation(mod3) # not signif
summary(mod3)

df1 <- within(df1, species <- relevel(species, ref = "Cyno"))

mod4 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
                          virus +
                          sex +
                          scale(weight)*species +
                          scale(time_feed) +
                          scale(temp_estim_feed)*species +
                  (1|ID) + (1|day),
                family = betabinomial(link = "logit"),
                weights = total*int_duration,
                REML = F,
                data = df1)
MuMIn::AICc(mod4) # 1637.608 / 1852.758
simulateResiduals(mod4, plot = T) # dispersion + heteroskedasticity
testDispersion(mod4) # still signif
testZeroInflation(mod4) # no longer signif
summary(mod4)

anova(mod0,mod3) # in favour of random effects with binomial
anova(mod1,mod4) # in favour of random effects with betabinomial
anova(mod3, mod4) # in favour of betabinomial with random effects

# mod5 <- glmmTMB(nb_fed/(total*int_duration) ~ viremia +
#                           virus +
#                           sex +
#                           scale(weight)*species +
#                           scale(time_feed) +
#                           scale(temp_estim_feed)*species +
#                   (1|ID) + (1|day),
#                 family = betabinomial(link = "logit"),
#                 weights = total*int_duration,
#                 dispformula = ~ sex + species + scale(weight),
#                 REML = F,
#                 data = df1)
# # error

summary(mod4) 
# With ZIKV Cyno
# effect of time of day (0.00161)
# and effect of temperature in squirrels
# scale(temp_estim_feed)              0.13569    0.06899   1.967  0.04920 *
# but not in cynos
# scale(temp_estim_feed)                  0.06279    0.07221   0.870  0.38452
# Without ZIKV Cyno
# time of feeding (0.002) and temperature (0.038) 
# Squirrel, effect of temp
# scale(temp_estim_feed)              0.14022    0.06773   2.070 0.038423 * 
# Cyno, effect of temp
# scale(temp_estim_feed)                  0.02926    0.07136   0.410  0.68174

car::Anova(mod4, type = "II") 
# With ZIKV Cyno
# species (0.020), time of day (0.0016) and temperature (0.047)
# Without ZIKV Cyno
# time of feeding (0.002) / species (0.053)


```


